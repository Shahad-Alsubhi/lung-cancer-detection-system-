{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R-mP0c9-qZMY","executionInfo":{"status":"ok","timestamp":1706610323135,"user_tz":-180,"elapsed":28256,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"6c45a32d-9c02-48ef-f52d-19c8b5087c44"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["#Importing libraries\n","import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.neighbors import KNeighborsClassifier\n","import matplotlib.pyplot as plt\n","\n","\n","from google.colab import drive\n","drive.mount('/content/gdrive')\n","dataset = pd.read_csv('/content/gdrive/My Drive/AI Project/survey lung cancer.csv')\n"]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"fHD4_fDCqlPi","executionInfo":{"status":"ok","timestamp":1706610325608,"user_tz":-180,"elapsed":395,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"68d0ab22-de2f-4006-e1da-388c15641984"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   GENDER  AGE  S0OKING  YELLOW_1INGERS  ANXIETY  PEER_PRESSURE  \\\n","0       0   69        1               2        2              1   \n","1       0   74        2               1        1              1   \n","2       1   59        1               1        1              2   \n","3       0   63        2               2        2              1   \n","4       1   63        1               2        1              1   \n","\n","   CHRONIC DISEASE  1ATIGUE   ALLERGY   WHEEZING  ALCOHOL CONSU0ING  COUGHING  \\\n","0                1         2         1         2                  2         2   \n","1                2         2         2         1                  1         1   \n","2                1         2         1         2                  1         2   \n","3                1         1         1         1                  2         1   \n","4                1         1         1         2                  1         2   \n","\n","   SHORTNESS O1 BREATH  SWALLOWING DI11ICULTY  CHEST PAIN  LUNG_CANCER  \n","0                    2                      2           2            0  \n","1                    2                      2           2            0  \n","2                    2                      1           2            1  \n","3                    1                      2           2            1  \n","4                    2                      1           1            1  "],"text/html":["\n","  <div id=\"df-0d448c8e-3d88-4a1f-a562-5ce7f7d46a3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GENDER</th>\n","      <th>AGE</th>\n","      <th>S0OKING</th>\n","      <th>YELLOW_1INGERS</th>\n","      <th>ANXIETY</th>\n","      <th>PEER_PRESSURE</th>\n","      <th>CHRONIC DISEASE</th>\n","      <th>1ATIGUE</th>\n","      <th>ALLERGY</th>\n","      <th>WHEEZING</th>\n","      <th>ALCOHOL CONSU0ING</th>\n","      <th>COUGHING</th>\n","      <th>SHORTNESS O1 BREATH</th>\n","      <th>SWALLOWING DI11ICULTY</th>\n","      <th>CHEST PAIN</th>\n","      <th>LUNG_CANCER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>69</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>74</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>59</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>63</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d448c8e-3d88-4a1f-a562-5ce7f7d46a3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0d448c8e-3d88-4a1f-a562-5ce7f7d46a3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0d448c8e-3d88-4a1f-a562-5ce7f7d46a3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-adfd329c-620b-4c90-be19-c9d2c0fbe121\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-adfd329c-620b-4c90-be19-c9d2c0fbe121')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-adfd329c-620b-4c90-be19-c9d2c0fbe121 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["print(\"Size of Dataset:\" ,dataset.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J0q_vTL04UT0","executionInfo":{"status":"ok","timestamp":1706610327509,"user_tz":-180,"elapsed":314,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"aa217456-809a-4fb1-c6eb-734c17646f4f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Size of Dataset: (309, 16)\n"]}]},{"cell_type":"code","source":["#Extract featuresand assign to(X) and target variable assign to (y)\n","X = dataset.iloc[:, :-1].values\n","y = dataset.iloc[:, 15].values"],"metadata":{"id":"-FlzUGVrqoe0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)"],"metadata":{"id":"oGrh2_IQqsSQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[" #feautures scaling using StandardScaler\n","scaler = StandardScaler()\n","scaler.fit(X_train)\n","X_train = scaler.transform(X_train)\n","X_test = scaler.transform(X_test)"],"metadata":{"id":"KCbTJeCrqxiI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#training prediction with k=5\n","classifier = KNeighborsClassifier(n_neighbors=5)\n","classifier.fit(X_train, y_train)\n","y_prediction = classifier.predict(X_test)\n","print(y_prediction)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sKODWNzeq39x","executionInfo":{"status":"ok","timestamp":1706610332781,"user_tz":-180,"elapsed":348,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"2b8b9668-8353-4d5b-f546-a1df2184ef19"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0]\n"]}]},{"cell_type":"code","source":["#Evaliute the model by classification report\n","import sklearn.metrics as metrics\n","print(confusion_matrix(y_test, y_prediction))\n","print(classification_report(y_test, y_prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FO2R45k6rIOj","executionInfo":{"status":"ok","timestamp":1706610336100,"user_tz":-180,"elapsed":340,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"00402b5a-ab2b-43aa-c5f7-167a3f9bfa77"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[69  2]\n"," [ 6  1]]\n","              precision    recall  f1-score   support\n","\n","           0       0.92      0.97      0.95        71\n","           1       0.33      0.14      0.20         7\n","\n","    accuracy                           0.90        78\n","   macro avg       0.63      0.56      0.57        78\n","weighted avg       0.87      0.90      0.88        78\n","\n"]}]},{"cell_type":"code","source":["\n","error = []\n","\n","# Calculating error for K values and draw pkot\n","for i in range(1,40):\n","  knn=KNeighborsClassifier(n_neighbors=i)\n","  knn.fit(X_train,y_train)\n","  pred_i = knn.predict(X_test)\n","  error.append(np.mean(pred_i != y_test))\n","plt.figure(figsize=(12, 6))\n","plt.plot(range(1, 40), error, color='pink', linestyle='dashed', marker='*',\n","         markerfacecolor='black', markersize=10)\n","\n","plt.title('K Value Error Rate')\n","plt.xlabel('K Value')\n","plt.ylabel('Mean Error')\n","\n"],"metadata":{"id":"Sah5LJwc4nOe","executionInfo":{"status":"ok","timestamp":1706610347777,"user_tz":-180,"elapsed":1446,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"f9ddfb80-10a1-409f-f383-bafa240e847d","colab":{"base_uri":"https://localhost:8080/","height":581}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Mean Error')"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}