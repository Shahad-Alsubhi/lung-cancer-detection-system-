{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wFDvUOf3nXvL","executionInfo":{"status":"ok","timestamp":1706602584162,"user_tz":-180,"elapsed":40624,"user":{"displayName":"Shahad Alsubhi","userId":"17648751664287182876"}},"outputId":"5fa43a9f-1e91-46ef-ae61-e746c60e6ddb"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["#Importing libraries\n","import numpy as np\n","import pandas as pd\n","import sklearn.tree as tree\n","from sklearn.model_selection import train_test_split\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import confusion_matrix, accuracy_score\n","from matplotlib import pyplot as plt\n","from google.colab import drive\n","\n","drive.mount('/content/gdrive')\n","dataset = pd.read_csv('/content/gdrive/My Drive/AI Project/survey lung cancer.csv')\n","\n"]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"EWKmm4hWqWIt","executionInfo":{"status":"ok","timestamp":1706595319737,"user_tz":-180,"elapsed":751,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"d1c59ef9-af47-4567-cc9c-aab021838b0f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   GENDER  AGE  S0OKING  YELLOW_1INGERS  ANXIETY  PEER_PRESSURE  \\\n","0       0   69        1               2        2              1   \n","1       0   74        2               1        1              1   \n","2       1   59        1               1        1              2   \n","3       0   63        2               2        2              1   \n","4       1   63        1               2        1              1   \n","\n","   CHRONIC DISEASE  1ATIGUE   ALLERGY   WHEEZING  ALCOHOL CONSU0ING  COUGHING  \\\n","0                1         2         1         2                  2         2   \n","1                2         2         2         1                  1         1   \n","2                1         2         1         2                  1         2   \n","3                1         1         1         1                  2         1   \n","4                1         1         1         2                  1         2   \n","\n","   SHORTNESS O1 BREATH  SWALLOWING DI11ICULTY  CHEST PAIN  LUNG_CANCER  \n","0                    2                      2           2            0  \n","1                    2                      2           2            0  \n","2                    2                      1           2            1  \n","3                    1                      2           2            1  \n","4                    2                      1           1            1  "],"text/html":["\n","  <div id=\"df-269458c5-8569-4774-9765-bb8082e8301e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GENDER</th>\n","      <th>AGE</th>\n","      <th>S0OKING</th>\n","      <th>YELLOW_1INGERS</th>\n","      <th>ANXIETY</th>\n","      <th>PEER_PRESSURE</th>\n","      <th>CHRONIC DISEASE</th>\n","      <th>1ATIGUE</th>\n","      <th>ALLERGY</th>\n","      <th>WHEEZING</th>\n","      <th>ALCOHOL CONSU0ING</th>\n","      <th>COUGHING</th>\n","      <th>SHORTNESS O1 BREATH</th>\n","      <th>SWALLOWING DI11ICULTY</th>\n","      <th>CHEST PAIN</th>\n","      <th>LUNG_CANCER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>69</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>74</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>59</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>63</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>63</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-269458c5-8569-4774-9765-bb8082e8301e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-269458c5-8569-4774-9765-bb8082e8301e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-269458c5-8569-4774-9765-bb8082e8301e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0cb71110-b30b-4d1a-8eff-eebb8aea6fd8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0cb71110-b30b-4d1a-8eff-eebb8aea6fd8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0cb71110-b30b-4d1a-8eff-eebb8aea6fd8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["print(\"Size of Dataset:\" ,dataset.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EooqBzIWNsCp","executionInfo":{"status":"ok","timestamp":1706595321735,"user_tz":-180,"elapsed":415,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"84dd5848-789e-433c-8410-81f3ae40f72c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Size of Dataset: (309, 16)\n"]}]},{"cell_type":"code","source":["X = dataset.iloc[:, :-1].values\n","y = dataset.iloc[:, 15].values\n","\n","#priting Attribute\n","print(\"\\t\\t\\t\\tAttributes\\n\")\n","print(X)\n","\n","#priting Target\n","print(\"\\t\\t\\t\\tTarget\\n\")\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y4EqR_Kmpnv9","executionInfo":{"status":"ok","timestamp":1706602592281,"user_tz":-180,"elapsed":684,"user":{"displayName":"Shahad Alsubhi","userId":"17648751664287182876"}},"outputId":"07231e36-32ba-4445-fc0c-9d3cb52f3026"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["\t\t\t\tAttributes\n","\n","[[ 0 69  1 ...  2  2  2]\n"," [ 0 74  2 ...  2  2  2]\n"," [ 1 59  1 ...  2  1  2]\n"," ...\n"," [ 0 58  2 ...  1  1  2]\n"," [ 0 67  2 ...  2  1  2]\n"," [ 0 62  1 ...  1  2  1]]\n","\t\t\t\tTarget\n","\n","[0 0 1 1 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 1 0 0 0 0 1 0 1 1 0 1 0 1 0 0\n"," 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 1 1 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0\n"," 0 0 0 1 0 0 0 1 0 0 0 1 0 1 0 0 0 0 1 0 0 1 1 1 0 0 0 1 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0]\n"]}]},{"cell_type":"code","source":["#Split the dataset into training and testing sets\n","X_train, X_test, y_train, y_test =train_test_split(X, y, test_size=0.25, random_state=100)"],"metadata":{"id":"to7ojCX0qhFd","executionInfo":{"status":"ok","timestamp":1706603422531,"user_tz":-180,"elapsed":487,"user":{"displayName":"Shahad Alsubhi","userId":"17648751664287182876"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["#Create a decision tree classifier\n","clf = DecisionTreeClassifier(random_state=100)\n","#Train the decision tree classifier\n","clf.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"bNVwkm0Mqkeo","executionInfo":{"status":"ok","timestamp":1706603425011,"user_tz":-180,"elapsed":445,"user":{"displayName":"Shahad Alsubhi","userId":"17648751664287182876"}},"outputId":"74df22e5-d487-4c05-9f88-78bf58a633c1"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(random_state=100)"],"text/html":["<style>#sk-container-id-9 {color: black;background-color: white;}#sk-container-id-9 pre{padding: 0;}#sk-container-id-9 div.sk-toggleable {background-color: white;}#sk-container-id-9 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-9 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-9 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-9 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-9 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-9 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-9 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-9 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-9 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-9 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-9 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-9 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-9 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-9 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-9 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-9 div.sk-item {position: relative;z-index: 1;}#sk-container-id-9 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-9 div.sk-item::before, #sk-container-id-9 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-9 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-9 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-9 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-9 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-9 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-9 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-9 div.sk-label-container {text-align: center;}#sk-container-id-9 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-9 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-9\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(random_state=100)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" checked><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeClassifier</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeClassifier(random_state=100)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["#Predict the target for testing data (X_test)\n","Y_pred=clf.predict(X_test)\n","print(Y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PVldO_oIqopn","executionInfo":{"status":"ok","timestamp":1706603427945,"user_tz":-180,"elapsed":513,"user":{"displayName":"Shahad Alsubhi","userId":"17648751664287182876"}},"outputId":"900ff335-0d28-4f31-a169-fa8e42f8a2e6"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["[0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 0 0 0 1 0\n"," 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0\n"," 0 0 0 0]\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"eIVx4pJYh0N0"}},{"cell_type":"code","source":["#The accuracy of the Decision Tree\n","import sklearn.metrics as metrics\n","print(\"\\tAccuracy\\n\")\n","print(\"The Accuracy:\" ,metrics.accuracy_score(y_test, Y_pred))\n","\n","#Generate and print confusion matrix\n","from sklearn.metrics import confusion_matrix,classification_report\n","print(\"\\n\\tConfusion Matrix\\n\")\n","cm=np.array (confusion_matrix (y_test,Y_pred))\n","cm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wX9N7vDEqtbK","executionInfo":{"status":"ok","timestamp":1706603433753,"user_tz":-180,"elapsed":488,"user":{"displayName":"Shahad Alsubhi","userId":"17648751664287182876"}},"outputId":"df335ddc-5510-4c22-f550-5d2dfb92fd98"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["\tAccuracy\n","\n","The Accuracy: 0.9230769230769231\n","\n","\tConfusion Matrix\n","\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[67,  3],\n","       [ 3,  5]])"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["#Evaluite the model by classification report\n","print(classification_report(y_test,Y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TzOf3NfZdlfi","executionInfo":{"status":"ok","timestamp":1706603439740,"user_tz":-180,"elapsed":576,"user":{"displayName":"Shahad Alsubhi","userId":"17648751664287182876"}},"outputId":"b94fa8c2-cac7-4e81-9a9c-dba7b9097582"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.96      0.96      0.96        70\n","           1       0.62      0.62      0.62         8\n","\n","    accuracy                           0.92        78\n","   macro avg       0.79      0.79      0.79        78\n","weighted avg       0.92      0.92      0.92        78\n","\n"]}]},{"cell_type":"code","source":["#The decision tree structure\n","tree.plot_tree(clf)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"81ElIX5Epqmo","executionInfo":{"status":"ok","timestamp":1706595344751,"user_tz":-180,"elapsed":2236,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"87676443-6771-4077-bc95-ebd58df8be0e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0.55, 0.9444444444444444, 'x[10] <= 1.5\\ngini = 0.232\\nsamples = 231\\nvalue = [200, 31]'),\n"," Text(0.2714285714285714, 0.8333333333333334, 'x[3] <= 1.5\\ngini = 0.385\\nsamples = 100\\nvalue = [74, 26]'),\n"," Text(0.11428571428571428, 0.7222222222222222, 'x[6] <= 1.5\\ngini = 0.48\\nsamples = 30\\nvalue = [12, 18]'),\n"," Text(0.05714285714285714, 0.6111111111111112, 'x[9] <= 1.5\\ngini = 0.337\\nsamples = 14\\nvalue = [3, 11]'),\n"," Text(0.02857142857142857, 0.5, 'gini = 0.0\\nsamples = 9\\nvalue = [0, 9]'),\n"," Text(0.08571428571428572, 0.5, 'x[1] <= 63.0\\ngini = 0.48\\nsamples = 5\\nvalue = [3, 2]'),\n"," Text(0.05714285714285714, 0.3888888888888889, 'gini = 0.0\\nsamples = 2\\nvalue = [0, 2]'),\n"," Text(0.11428571428571428, 0.3888888888888889, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.17142857142857143, 0.6111111111111112, 'x[0] <= 0.5\\ngini = 0.492\\nsamples = 16\\nvalue = [9, 7]'),\n"," Text(0.14285714285714285, 0.5, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.2, 0.5, 'x[1] <= 59.5\\ngini = 0.5\\nsamples = 14\\nvalue = [7, 7]'),\n"," Text(0.17142857142857143, 0.3888888888888889, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.22857142857142856, 0.3888888888888889, 'x[1] <= 61.5\\ngini = 0.463\\nsamples = 11\\nvalue = [7, 4]'),\n"," Text(0.2, 0.2777777777777778, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.2571428571428571, 0.2777777777777778, 'x[8] <= 1.5\\ngini = 0.5\\nsamples = 8\\nvalue = [4, 4]'),\n"," Text(0.22857142857142856, 0.16666666666666666, 'x[12] <= 1.5\\ngini = 0.444\\nsamples = 6\\nvalue = [2, 4]'),\n"," Text(0.2, 0.05555555555555555, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.2571428571428571, 0.05555555555555555, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.2857142857142857, 0.16666666666666666, 'gini = 0.0\\nsamples = 2\\nvalue = [2, 0]'),\n"," Text(0.42857142857142855, 0.7222222222222222, 'x[7] <= 1.5\\ngini = 0.202\\nsamples = 70\\nvalue = [62, 8]'),\n"," Text(0.4, 0.6111111111111112, 'x[4] <= 1.5\\ngini = 0.472\\nsamples = 21\\nvalue = [13, 8]'),\n"," Text(0.3142857142857143, 0.5, 'x[14] <= 1.5\\ngini = 0.278\\nsamples = 6\\nvalue = [1, 5]'),\n"," Text(0.2857142857142857, 0.3888888888888889, 'gini = 0.0\\nsamples = 4\\nvalue = [0, 4]'),\n"," Text(0.34285714285714286, 0.3888888888888889, 'x[2] <= 1.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.3142857142857143, 0.2777777777777778, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.37142857142857144, 0.2777777777777778, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.4857142857142857, 0.5, 'x[5] <= 1.5\\ngini = 0.32\\nsamples = 15\\nvalue = [12, 3]'),\n"," Text(0.45714285714285713, 0.3888888888888889, 'x[6] <= 1.5\\ngini = 0.49\\nsamples = 7\\nvalue = [4, 3]'),\n"," Text(0.42857142857142855, 0.2777777777777778, 'x[1] <= 52.5\\ngini = 0.375\\nsamples = 4\\nvalue = [1, 3]'),\n"," Text(0.4, 0.16666666666666666, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.45714285714285713, 0.16666666666666666, 'gini = 0.0\\nsamples = 3\\nvalue = [0, 3]'),\n"," Text(0.4857142857142857, 0.2777777777777778, 'gini = 0.0\\nsamples = 3\\nvalue = [3, 0]'),\n"," Text(0.5142857142857142, 0.3888888888888889, 'gini = 0.0\\nsamples = 8\\nvalue = [8, 0]'),\n"," Text(0.45714285714285713, 0.6111111111111112, 'gini = 0.0\\nsamples = 49\\nvalue = [49, 0]'),\n"," Text(0.8285714285714286, 0.8333333333333334, 'x[12] <= 1.5\\ngini = 0.073\\nsamples = 131\\nvalue = [126, 5]'),\n"," Text(0.7142857142857143, 0.7222222222222222, 'x[13] <= 1.5\\ngini = 0.145\\nsamples = 51\\nvalue = [47, 4]'),\n"," Text(0.6285714285714286, 0.6111111111111112, 'x[1] <= 69.5\\ngini = 0.291\\nsamples = 17\\nvalue = [14, 3]'),\n"," Text(0.6, 0.5, 'x[1] <= 59.0\\ngini = 0.444\\nsamples = 9\\nvalue = [6, 3]'),\n"," Text(0.5714285714285714, 0.3888888888888889, 'gini = 0.0\\nsamples = 4\\nvalue = [4, 0]'),\n"," Text(0.6285714285714286, 0.3888888888888889, 'x[9] <= 1.5\\ngini = 0.48\\nsamples = 5\\nvalue = [2, 3]'),\n"," Text(0.6, 0.2777777777777778, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.6571428571428571, 0.2777777777777778, 'x[6] <= 1.5\\ngini = 0.5\\nsamples = 4\\nvalue = [2, 2]'),\n"," Text(0.6285714285714286, 0.16666666666666666, 'x[1] <= 66.5\\ngini = 0.444\\nsamples = 3\\nvalue = [1, 2]'),\n"," Text(0.6, 0.05555555555555555, 'gini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.6571428571428571, 0.05555555555555555, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.6857142857142857, 0.16666666666666666, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.6571428571428571, 0.5, 'gini = 0.0\\nsamples = 8\\nvalue = [8, 0]'),\n"," Text(0.8, 0.6111111111111112, 'x[5] <= 1.5\\ngini = 0.057\\nsamples = 34\\nvalue = [33, 1]'),\n"," Text(0.7714285714285715, 0.5, 'x[8] <= 1.5\\ngini = 0.198\\nsamples = 9\\nvalue = [8, 1]'),\n"," Text(0.7428571428571429, 0.3888888888888889, 'x[1] <= 61.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.7142857142857143, 0.2777777777777778, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.7714285714285715, 0.2777777777777778, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.8, 0.3888888888888889, 'gini = 0.0\\nsamples = 7\\nvalue = [7, 0]'),\n"," Text(0.8285714285714286, 0.5, 'gini = 0.0\\nsamples = 25\\nvalue = [25, 0]'),\n"," Text(0.9428571428571428, 0.7222222222222222, 'x[1] <= 55.5\\ngini = 0.025\\nsamples = 80\\nvalue = [79, 1]'),\n"," Text(0.9142857142857143, 0.6111111111111112, 'x[14] <= 1.5\\ngini = 0.133\\nsamples = 14\\nvalue = [13, 1]'),\n"," Text(0.8857142857142857, 0.5, 'x[8] <= 1.5\\ngini = 0.5\\nsamples = 2\\nvalue = [1, 1]'),\n"," Text(0.8571428571428571, 0.3888888888888889, 'gini = 0.0\\nsamples = 1\\nvalue = [0, 1]'),\n"," Text(0.9142857142857143, 0.3888888888888889, 'gini = 0.0\\nsamples = 1\\nvalue = [1, 0]'),\n"," Text(0.9428571428571428, 0.5, 'gini = 0.0\\nsamples = 12\\nvalue = [12, 0]'),\n"," Text(0.9714285714285714, 0.6111111111111112, 'gini = 0.0\\nsamples = 66\\nvalue = [66, 0]')]"]},"metadata":{},"execution_count":10},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#text representation in decision tree\n","text_representation= tree.export_text(clf)\n","print(text_representation)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3K6GvB6mpsmM","executionInfo":{"status":"ok","timestamp":1706595351020,"user_tz":-180,"elapsed":402,"user":{"displayName":"Manar al","userId":"14156422747619052836"}},"outputId":"97799826-6057-4024-e5a0-b2c1630a13e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["|--- feature_10 <= 1.50\n","|   |--- feature_3 <= 1.50\n","|   |   |--- feature_6 <= 1.50\n","|   |   |   |--- feature_9 <= 1.50\n","|   |   |   |   |--- class: 1\n","|   |   |   |--- feature_9 >  1.50\n","|   |   |   |   |--- feature_1 <= 63.00\n","|   |   |   |   |   |--- class: 1\n","|   |   |   |   |--- feature_1 >  63.00\n","|   |   |   |   |   |--- class: 0\n","|   |   |--- feature_6 >  1.50\n","|   |   |   |--- feature_0 <= 0.50\n","|   |   |   |   |--- class: 0\n","|   |   |   |--- feature_0 >  0.50\n","|   |   |   |   |--- feature_1 <= 59.50\n","|   |   |   |   |   |--- class: 1\n","|   |   |   |   |--- feature_1 >  59.50\n","|   |   |   |   |   |--- feature_1 <= 61.50\n","|   |   |   |   |   |   |--- class: 0\n","|   |   |   |   |   |--- feature_1 >  61.50\n","|   |   |   |   |   |   |--- feature_8 <= 1.50\n","|   |   |   |   |   |   |   |--- feature_12 <= 1.50\n","|   |   |   |   |   |   |   |   |--- class: 0\n","|   |   |   |   |   |   |   |--- feature_12 >  1.50\n","|   |   |   |   |   |   |   |   |--- class: 1\n","|   |   |   |   |   |   |--- feature_8 >  1.50\n","|   |   |   |   |   |   |   |--- class: 0\n","|   |--- feature_3 >  1.50\n","|   |   |--- feature_7 <= 1.50\n","|   |   |   |--- feature_4 <= 1.50\n","|   |   |   |   |--- feature_14 <= 1.50\n","|   |   |   |   |   |--- class: 1\n","|   |   |   |   |--- feature_14 >  1.50\n","|   |   |   |   |   |--- feature_2 <= 1.50\n","|   |   |   |   |   |   |--- class: 0\n","|   |   |   |   |   |--- feature_2 >  1.50\n","|   |   |   |   |   |   |--- class: 1\n","|   |   |   |--- feature_4 >  1.50\n","|   |   |   |   |--- feature_5 <= 1.50\n","|   |   |   |   |   |--- feature_6 <= 1.50\n","|   |   |   |   |   |   |--- feature_1 <= 52.50\n","|   |   |   |   |   |   |   |--- class: 0\n","|   |   |   |   |   |   |--- feature_1 >  52.50\n","|   |   |   |   |   |   |   |--- class: 1\n","|   |   |   |   |   |--- feature_6 >  1.50\n","|   |   |   |   |   |   |--- class: 0\n","|   |   |   |   |--- feature_5 >  1.50\n","|   |   |   |   |   |--- class: 0\n","|   |   |--- feature_7 >  1.50\n","|   |   |   |--- class: 0\n","|--- feature_10 >  1.50\n","|   |--- feature_12 <= 1.50\n","|   |   |--- feature_13 <= 1.50\n","|   |   |   |--- feature_1 <= 69.50\n","|   |   |   |   |--- feature_1 <= 59.00\n","|   |   |   |   |   |--- class: 0\n","|   |   |   |   |--- feature_1 >  59.00\n","|   |   |   |   |   |--- feature_9 <= 1.50\n","|   |   |   |   |   |   |--- class: 1\n","|   |   |   |   |   |--- feature_9 >  1.50\n","|   |   |   |   |   |   |--- feature_6 <= 1.50\n","|   |   |   |   |   |   |   |--- feature_1 <= 66.50\n","|   |   |   |   |   |   |   |   |--- class: 0\n","|   |   |   |   |   |   |   |--- feature_1 >  66.50\n","|   |   |   |   |   |   |   |   |--- class: 1\n","|   |   |   |   |   |   |--- feature_6 >  1.50\n","|   |   |   |   |   |   |   |--- class: 0\n","|   |   |   |--- feature_1 >  69.50\n","|   |   |   |   |--- class: 0\n","|   |   |--- feature_13 >  1.50\n","|   |   |   |--- feature_5 <= 1.50\n","|   |   |   |   |--- feature_8 <= 1.50\n","|   |   |   |   |   |--- feature_1 <= 61.50\n","|   |   |   |   |   |   |--- class: 0\n","|   |   |   |   |   |--- feature_1 >  61.50\n","|   |   |   |   |   |   |--- class: 1\n","|   |   |   |   |--- feature_8 >  1.50\n","|   |   |   |   |   |--- class: 0\n","|   |   |   |--- feature_5 >  1.50\n","|   |   |   |   |--- class: 0\n","|   |--- feature_12 >  1.50\n","|   |   |--- feature_1 <= 55.50\n","|   |   |   |--- feature_14 <= 1.50\n","|   |   |   |   |--- feature_8 <= 1.50\n","|   |   |   |   |   |--- class: 1\n","|   |   |   |   |--- feature_8 >  1.50\n","|   |   |   |   |   |--- class: 0\n","|   |   |   |--- feature_14 >  1.50\n","|   |   |   |   |--- class: 0\n","|   |   |--- feature_1 >  55.50\n","|   |   |   |--- class: 0\n","\n"]}]}]}